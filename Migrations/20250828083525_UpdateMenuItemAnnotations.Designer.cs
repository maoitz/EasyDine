// <auto-generated />
using System;
using EasyDine.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyDine.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250828083525_UpdateMenuItemAnnotations")]
    partial class UpdateMenuItemAnnotations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyDine.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("EasyDine.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateBooked")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TimeBooked")
                        .HasColumnType("time");

                    b.Property<int>("TotalGuests")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TableId", "DateBooked");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            DateBooked = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            Status = "Confirmed",
                            TableId = 1,
                            TimeBooked = new TimeSpan(0, 19, 0, 0, 0),
                            TotalGuests = 2
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            DateBooked = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            Status = "Pending",
                            TableId = 2,
                            TimeBooked = new TimeSpan(0, 20, 0, 0, 0),
                            TotalGuests = 4
                        });
                });

            modelBuilder.Entity("EasyDine.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john@example.se",
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane@example.se",
                            FirstName = "Jane",
                            LastName = "Smith",
                            PhoneNumber = "0987654321"
                        });
                });

            modelBuilder.Entity("EasyDine.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Our delicious lunch offerings served daily until 13:00.",
                            Name = "Lunch Menu"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Our exquisite dinner selections available from 17:00 onwards.",
                            Name = "Dinner Menu"
                        });
                });

            modelBuilder.Entity("EasyDine.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AdminIsPopularOverride")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PopularityThreshold")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("PurchaseCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A delicious club sandwich with turkey, bacon, lettuce, and tomato.",
                            Name = "Club Sandwich",
                            PopularityThreshold = 50,
                            Price = 89m,
                            PurchaseCount = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Classic Italian pasta with creamy sauce, pancetta, and Parmesan cheese.",
                            Name = "Pasta Carbonara",
                            PopularityThreshold = 50,
                            Price = 129m,
                            PurchaseCount = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Crisp romaine lettuce with Caesar dressing, croutons, and Parmesan cheese.",
                            Name = "Caesar Salad",
                            PopularityThreshold = 50,
                            Price = 99m,
                            PurchaseCount = 0
                        });
                });

            modelBuilder.Entity("EasyDine.Models.MenuMenuItem", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.HasKey("MenuId", "MenuItemId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("MenuMenuItems");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            MenuItemId = 1
                        },
                        new
                        {
                            MenuId = 1,
                            MenuItemId = 3
                        },
                        new
                        {
                            MenuId = 2,
                            MenuItemId = 2
                        },
                        new
                        {
                            MenuId = 2,
                            MenuItemId = 3
                        });
                });

            modelBuilder.Entity("EasyDine.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = 1,
                            Seats = 2
                        },
                        new
                        {
                            Id = 2,
                            Number = 2,
                            Seats = 4
                        },
                        new
                        {
                            Id = 3,
                            Number = 3,
                            Seats = 6
                        });
                });

            modelBuilder.Entity("EasyDine.Models.Booking", b =>
                {
                    b.HasOne("EasyDine.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyDine.Models.Table", "Table")
                        .WithMany("Bookings")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("EasyDine.Models.MenuMenuItem", b =>
                {
                    b.HasOne("EasyDine.Models.Menu", "Menu")
                        .WithMany("MenuMenuItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyDine.Models.MenuItem", "MenuItem")
                        .WithMany("MenuMenuItems")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("EasyDine.Models.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("EasyDine.Models.Menu", b =>
                {
                    b.Navigation("MenuMenuItems");
                });

            modelBuilder.Entity("EasyDine.Models.MenuItem", b =>
                {
                    b.Navigation("MenuMenuItems");
                });

            modelBuilder.Entity("EasyDine.Models.Table", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
